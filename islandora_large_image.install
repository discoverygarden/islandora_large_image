<?php

/**
 * @file
 * islandora_large_image.install
 */

/**
 * Implements hook_requirements().
 */
function islandora_large_image_requirements($phase) {
  $requirements = [];
  $t = 't';

  if (in_array($phase, ['install', 'runtime'])) {
    $has_kakadu = _islandora_large_image_install_has_kakadu($phase);
    $has_jp2_imagemagick = _islandora_large_image_install_has_imagemagick_with_jpeg2000_support();
    if ($has_kakadu) {
      $requirements['islandora_large_image_kakadu'] = [
        'title' => $t("Islandora Solution Pack Large Image: Kakadu Image Compression"),
        'value' => $t("Installed"),
        'severity' => REQUIREMENT_INFO,
        'description' => $t('The kdu_compress executable is accessible.'),
      ];
    }
    else {
      $requirements['islandora_large_image_kakadu'] = [
        'title' => $t("Islandora Solution Pack Large Image: Kakadu Image Compression"),
        'value' => $t('Not found'),
        'severity' => REQUIREMENT_INFO,
        'description' => $t('The kdu_compress executable was not found.  If you wish to use Kakadu Image Compression it must be enabled and configured on the solution pack configuration page.'),
      ];
    }
    if ($has_jp2_imagemagick) {
      $requirements['islandora_large_image_imagemagick'] = [
        'title' => $t("Islandora Solution Pack Large Image: Imagemagick Image Compression"),
        'value' => $t("Installed"),
        'severity' => REQUIREMENT_INFO,
        'description' => $t('Imagemagick is present and appears to support JPEG2000.'),
      ];
    }
    else {
      $requirements['islandora_large_image_imagemagick'] = [
        'title' => $t("Islandora Solution Pack Large Image: Imagemagick Image Compression"),
        'value' => $t("Not installed"),
        'severity' => REQUIREMENT_INFO,
        'description' => $t('Imagemagick does not appear to support JPEG2000.'),
      ];
    }
    if (!($has_kakadu || $has_jp2_imagemagick)) {
      $requirements['islandora_large_image_encoder'] = [
        'title' => $t("Islandora Solution Pack Large Image: JPEG 2000 image encoder"),
        'value' => $t("Not installed"),
        'severity' => REQUIREMENT_ERROR,
        'description' => $t('A JPEG 2000 encoder is not installed/configured.'),
      ];
    }
    else {
      $requirements['islandora_large_image_encoder'] = [
        'title' => $t("Islandora Solution Pack Large Image: JPEG 2000 image encoder"),
        'value' => $t("Installed"),
        'severity' => REQUIREMENT_OK,
        'description' => $t('A JPEG 2000 encoder is installed.'),
      ];
    }
  }
  return $requirements;
}

/**
 * Helper to test if Kakadu appears to be available.
 */
function _islandora_large_image_install_has_kakadu($phase) {
  module_load_include('inc', 'islandora', 'includes/utilities');

  $out = [];
  $ret = 1;
  if ($phase != 'install') {
    $kdu_compress = \Drupal::config('islandora_large_image.settings')->get('islandora_kakadu_url');
    $kdu_compress = escapeshellarg($kdu_compress);
  }
  else {
    $kdu_compress = 'kdu_compress';
  }
  $command = "command -v $kdu_compress >/dev/null 2>&1";

  if (islandora_deployed_on_windows()) {
    $command = "$kdu_compress >NUL 2>&1";
  }

  exec($command, $out, $ret);

  return $ret == 0;
}

/**
 * Helper to test that imagemagick appears to have JPEG 2000 support.
 */
function _islandora_large_image_install_has_imagemagick_with_jpeg2000_support() {
  require_once __DIR__ . '/includes/utilities.inc';
  return islandora_large_image_check_imagemagick_for_jpeg2000();
}

/**
 * Implements hook_install().
 *
 * @see islandora_large_image_islandora_required_objects()
 */
function islandora_large_image_install() {
  module_load_include('inc', 'islandora', 'includes/solution_packs');
  islandora_install_solution_pack('islandora_large_image');
}

/**
 * Implements hook_uninstall().
 */
function islandora_large_image_uninstall() {
  module_load_include('inc', 'islandora', 'includes/solution_packs');
  islandora_install_solution_pack('islandora_large_image', 'uninstall');
}
